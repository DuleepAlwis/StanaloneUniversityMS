/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nsbm.universityms.view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import nsbm.university.controller.StaffController;
import nsbm.universityms.model.Staff;



/**
 *
 * @author Dulip
 */
public class StaffDetails extends javax.swing.JInternalFrame {

    /**
     * Creates new form addstaff
     */
    String table;
    String sql;
    StaffController staffcontrol = new StaffController();
    int i; //Lecturer 1  Instructer 2
    
    public StaffDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        staffid = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        month = new javax.swing.JComboBox<>();
        year = new javax.swing.JTextField();
        day = new javax.swing.JLabel();
        date = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cnumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staddress = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        soffice = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        lecturec = new javax.swing.JCheckBox();
        instructerc = new javax.swing.JCheckBox();
        category = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        staff = new javax.swing.JTable();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Staff details");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Staff id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("DOB");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Year");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Month");

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December" }));

        day.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        day.setText("Date");

        date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Contact number");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Gender");

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Address");

        staddress.setColumns(20);
        staddress.setRows(5);
        jScrollPane1.setViewportView(staddress);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Office");

        save.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        lecturec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lecturec.setText("Lecturer");
        lecturec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lecturecActionPerformed(evt);
            }
        });

        instructerc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        instructerc.setText("Instructer");
        instructerc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructercActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 51));
        jLabel13.setText("*Only for lecturers");

        update.setBackground(new java.awt.Color(153, 255, 255));
        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 0, 51));
        delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        staff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        staff.setFillsViewportHeight(true);
        staff.setFocusCycleRoot(true);
        staff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(staff);

        jScrollPane3.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(109, 109, 109)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(soffice, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(112, 112, 112)
                                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(136, 136, 136)
                                                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(cnumber, javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGap(18, 18, 18)
                                                                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGap(38, 38, 38)
                                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                            .addGap(33, 33, 33)
                                                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(42, 42, 42)
                                                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(32, 32, 32)
                                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(staffid, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lecturec)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(138, 138, 138)
                                        .addComponent(instructerc))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(372, 372, 372)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(category))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(instructerc)
                                    .addComponent(lecturec))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(staffid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(day)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(cnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(soffice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(save)
                            .addComponent(cancel)
                            .addComponent(delete))))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        HashMap<String,String> months = new HashMap<String,String>();
        String [] montha = {"January","February","March","April","May","June","July","August","September","October","November","December"};
        String [] monthnum = {"1","2","3","4","5","6","7","8","9","10","11","12"};
        int j=0;
        for(j=0;j<montha.length;j++)
        {
            months.put(montha[j], monthnum[j]);
        }
        /*String sid = staffid.getText();
        String sname = name.getText();
        String y = year.getText();
        String m = months.get(month.getSelectedItem().toString());
        
        String d = date.getSelectedItem().toString();
        
        String contact = cnumber.getText();
        String gen = gender.getSelectedItem().toString().trim();
        String address = staddress.getText().trim();*/
       
        try {
            
            if(lecturec.isSelected())
            {
                //String office = soffice.getText();
                //String sql = "insert into lecturer(staffid,name,dob,contact,address,gender,office) values('"+sid+"','"+sname+"','"+dob+"','"+contact+"','"+gen+"','"+office+"','"+address+"');";
                Staff lec = new Staff();
                lec.setId(staffid.getText());
                lec.setName(name.getText());
                String y = year.getText();
                String m = months.get(month.getSelectedItem().toString());

                String d = date.getSelectedItem().toString();
                String dob = y+"-"+m+"-"+d;
                lec.setDob(dob);
                lec.setMobile(cnumber.getText());
                lec.setGender(gender.getSelectedItem().toString().trim());
                lec.setAddress(staddress.getText().trim());
                lec.setOffice(soffice.getText());
                /*Staff.setPerson(sid, sname, address, contact, dob, gen);
                Staff.setLecturer(office);*/
                if(staffcontrol.addStaff(lec, 1))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Entered successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Entered unsuccess");
                }
            
            
            
            }
        
            if(instructerc.isSelected())
            {
                //String sql = "insert into instructer(staffid,name,dob,contact,address,gender) values('"+sid+"','"+sname+"','"+dob+"','"+contact+"','"+address+"','"+gen+"');";
                Staff instructer = new Staff();
                instructer.setId(staffid.getText());
                instructer.setName(name.getText());
                String y = year.getText();
                String m = months.get(month.getSelectedItem().toString());

                String d = date.getSelectedItem().toString();
                String dob = y+"-"+m+"-"+d;
                instructer.setDob(dob);
                instructer.setMobile(cnumber.getText());
                instructer.setGender(gender.getSelectedItem().toString().trim());
                instructer.setAddress(staddress.getText().trim());
                //Staff.setPerson(sid, sname, address, contact, dob, gen);
                
                
                if(staffcontrol.addStaff(instructer, 2))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Entered successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Entered unsuccess");
                }
            
            
            
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        }
        
        
        
    }//GEN-LAST:event_saveActionPerformed

    private void lecturecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lecturecActionPerformed
        staff.removeAll();
        instructerc.setSelected(false);
        i = 1;
        soffice.setEnabled(true);
        tableLoad(i);

    }//GEN-LAST:event_lecturecActionPerformed

    private void instructercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructercActionPerformed
        staff.removeAll();
        lecturec.setSelected(false);
        i = 2;
        soffice.setEnabled(false);
        tableLoad(i);
        
    }//GEN-LAST:event_instructercActionPerformed

    private void tableLoad(int h)
    {
        if(h==1)
        {
            
            try {
                
                //sql = "select staffid as Staffid,name as Name,dob as DOB,contact as ContactN,address as Address,gender as Gender from instructer;";
                
                ResultSet result = staffcontrol.retrieve(1);
                //result = db.fetch(sql);*/
                if(result!=null)
                {
                    staff.setModel(DbUtils.resultSetToTableModel(result));
                    try 
                    {
                        result.close();

                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }      

                else 
                {
                    ((DefaultTableModel)staff.getModel()).setNumRows(0);
                    System.out.println("Error");
                                

                }
            } catch (SQLException ex) {
                Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(rootPane,ex.getMessage());

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(rootPane,ex.getMessage());

            }                      
            
        }
        if(h==2)
        {
            
            try {
                
                //sql = "select staffid as Staffid,name as Name,dob as DOB,contact as ContactN,address as Address,gender as Gender,office as Office from lecturer;";
                
                ResultSet result = staffcontrol.retrieve(2);
                if(result!=null)
                {
                    category.setText("Lecturer");
                    staff.setModel(DbUtils.resultSetToTableModel(result));

                }      

                else 
                {
                    ((DefaultTableModel)staff.getModel()).setNumRows(0);
                    System.out.println("Error");
                }
            } catch (SQLException ex) {
                Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(rootPane,ex.getMessage());

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(rootPane,ex.getMessage());

            }
            
        }
    }
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        clear();
    }//GEN-LAST:event_cancelActionPerformed

    private void staffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffMouseClicked
        clear();
        
        if(i==1)
        {
            instructerc.setSelected(false);
            
            int r = staff.getSelectedRow();
            String sid = staff.getValueAt(r,0).toString();
            String sname = staff.getValueAt(r, 1).toString();
            String [] dob = staff.getValueAt(r, 2).toString().split("-");
            String contactn = staff.getValueAt(r, 3).toString();
            String address = staff.getValueAt(r, 4).toString();
            String sgender = staff.getValueAt(r, 5).toString();
            String office = staff.getValueAt(r, 6).toString();
            staffid.setText(sid);
            name.setText(sname);
            year.setText(dob[0]);
            month.setSelectedItem(dob[1]);
            date.setSelectedItem(dob[2]);
            cnumber.setText(contactn);
            staddress.setText(address);
            gender.setSelectedItem(sgender);
            soffice.setText(office);
        }
        
        if(i==2)
        {
            lecturec.setSelected(false);
            
            int r = staff.getSelectedRow();
            String sid = staff.getValueAt(r,0).toString();
            String sname = staff.getValueAt(r, 1).toString();
            String [] dob = staff.getValueAt(r, 2).toString().split("-");
            String contactn = staff.getValueAt(r, 3).toString();
            String address = staff.getValueAt(r, 4).toString();
            String sgender = staff.getValueAt(r, 5).toString();
           
            staffid.setText(sid);
            name.setText(sname);
            year.setText(dob[0]);
            month.setSelectedItem(dob[1]);
            date.setSelectedItem(dob[2]);
            cnumber.setText(contactn);
            staddress.setText(address);
            gender.setSelectedItem(sgender);
            
        }
    }//GEN-LAST:event_staffMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        HashMap<String,String> months = new HashMap<String,String>();
        String [] montha = {"January","February","March","April","May","June","July","August","September","October","November","December"};
        String [] monthnum = {"1","2","3","4","5","6","7","8","9","10","11","12"};
        try {
            
            if(i==1)
            {
                Staff lec = new Staff();
                lec.setName(name.getText());
                lec.setMobile(cnumber.getText());
                lec.setAddress(staddress.getText());
                lec.setOffice(soffice.getText());
                lec.setId(staffid.getText());
                String y = year.getText();
                String m = months.get(month.getSelectedItem().toString());

                String d = date.getSelectedItem().toString();
                String dob = y+"-"+m+"-"+d;
                lec.setDob(dob);
                //String sql = "update lecturer set name='"+name.getText()+"',contact='"+cnumber.getText()+"',address='"+staddress.getText()+"',office='"+soffice.getText()+"' where staffid='"+staffid.getText()+"';";
            
                if(staffcontrol.updateStaff(lec, 1))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data updated successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Updated unsuccess");
                }
            
            }
        
            if(i==2)
            {
                Staff lec = new Staff();
                lec.setName(name.getText());
                lec.setMobile(cnumber.getText());
                lec.setAddress(staddress.getText());
                lec.setId(staffid.getText());
                //String sql = "update instructer set name='"+name.getText()+"',contact='"+cnumber.getText()+"',address='"+staddress.getText()+"' where staffid='"+staffid.getText()+"';";
                
                if(staffcontrol.updateStaff(lec, 2))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data updated successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data Updated unsuccess");
                }
            
            }
            } catch (SQLException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        }
        
        
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure you want to remove?","Warning",dialogButton);
        if(JOptionPane.YES_NO_OPTION != dialogResult)
        {
            return;
        }
        try {
            
            if(i==1)
            {
                Staff lec = new Staff();
                lec.setId(staffid.getText());
                
            
                if(staffcontrol.removeStaff(lec, 1))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data deleted successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data deleted unsuccess");
                }
            
            }
        
            if(i==2)
            {
                
            
                Staff lec = new Staff();
                lec.setId(staffid.getText());
                
            
                if(staffcontrol.removeStaff(lec, 2))
                {
                    JOptionPane.showMessageDialog(rootPane,"Data deleted successfully");
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Data deleted unsuccess");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StaffDetails.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane,ex.getMessage());

        }
        
        
    }//GEN-LAST:event_deleteActionPerformed
    
    private void clear()
    {
        JTextField [] items = {staffid,name,year,cnumber,soffice};
        int j = 0;
        for(j=0;j<items.length;j++)
        {
            items[j].setText("");
        }
        staddress.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel category;
    private javax.swing.JTextField cnumber;
    private javax.swing.JComboBox<String> date;
    private javax.swing.JLabel day;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JCheckBox instructerc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JCheckBox lecturec;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JTextField name;
    private javax.swing.JButton save;
    private javax.swing.JTextField soffice;
    private javax.swing.JTextArea staddress;
    private javax.swing.JTable staff;
    private javax.swing.JTextField staffid;
    private javax.swing.JButton update;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
